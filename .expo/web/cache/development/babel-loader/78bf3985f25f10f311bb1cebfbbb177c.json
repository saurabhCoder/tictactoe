{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/saurabh/myNewProject/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, \"\\\"Hello World\\\"\");\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game();","map":{"version":3,"sources":["/Users/saurabh/myNewProject/App.js"],"names":["StatusBar","React","Game","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;IA6EQC,I;;;;;;;;;;;;;6BAgCK;AA4BP,aAAQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAR;AACD;;;;EA7DgBD,KAAK,CAACE,S;;AAgEzB,eAAeD,IAAI,EAAnB","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\n\n//function App() {\n//  return (\n   // <View style={styles.container}>\n   //   <Text>Hello World!</Text>\n   //   <StatusBar style=\"auto\" />\n   // </View>\n//   <Game />\n//  );\n//}\n\n/*const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});*/\n\n/* const Square = (props) => {\n    return (\n      <Button className=\"square\" onPress={props.onClick} title={props.value}/>\n    );\n  }\n\n  const calculateWinner = (squares) =>{\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  class Board extends Component {\n    renderSquare(i) {\n      return <Square value={this.props.squares[i]} onClick={()=>this.props.onClick(i)} />;\n    }\n\n    render() {\n      return (\n        <Div>\n          <Div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </Div>\n          <Div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </Div>\n          <Div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </Div>\n        </Div>\n      );\n    }\n  }*/\n  \n  class Game extends React.Component {\n   /* constructor(props){\n      super(props);\n      this.state = {\n        history: [{squares: Array(9).fill(null),}],\n        xIsNext: true,\n        stepNumber: 0,\n      };  \n    }\n    \n    handleClick(i){\n      const history = this.state.history.slice(0,this.state.stepNumber+1);\n      const current = history[history.length-1]\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]){\n        return;\n      }\n      squares[i]=this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{squares: squares,}]),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length,\n      });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      })\n    }*/\n    \n    render() {\n     /* const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n      const moves = history.map((step,move) => {\n        const desc = move ? \n          'Go to move #' + move :\n          'Go to game start';\n        return (\n          <Button onPress={()=> this.jumpTo(move)} title={desc}/>\n        )\n      });\n      let status;\n      if(winner){\n        status = 'Winner ' + winner;\n      } else{\n        status = 'Next player: '+ (this.state.xIsNext ? 'X' : 'O');\n      }\n      return (\n        <ScrollView>\n            <Board\n              squares = {current.squares}\n         //     onClick = {(i) => this.handleClick(i)}\n            />\n            <Text>{status}</Text>\n            <View>{moves}</View>\n        </ScrollView>\n      );*/\n      return (<Text>\"Hello World\"</Text>);\n    }\n  }\n\n  export default Game();\n  \n  \n  "]},"metadata":{},"sourceType":"module"}